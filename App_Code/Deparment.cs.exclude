using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Data;
using System.Configuration;

/// <summary>
/// Summary description for Deparment
/// </summary>
public class Department
{
    private int id;
    private int companyId;
    private string name;
    public List<Employee> Employees { get; set; }

    public int Id
    {
        get
        {
            return this.id;
        }

        set
        {
            this.id = value;
        }
    }

    public int CompanyId
    {
        get
        {
            return this.companyId;
        }

        set
        {
            this.companyId = value;
        }
    }

    public string Name
    {
        get
        {
            return this.name;
        }

        set
        {
            this.name = value;
        }
    }


	public Department()
	{
        this.Employees = new List<Employee>();
	}

    public Department(int id, int companyId)
    {
        this.Employees = new List<Employee>();
        SqlConnection cnn = new SqlConnection(ConfigurationManager.ConnectionStrings["cns"].ConnectionString);
        SqlCommand cmd = new SqlCommand("Department_GetById", cnn);

        try
        {
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.Add("@Id", SqlDbType.Int);
            cmd.Parameters.Add("@CompanyId", SqlDbType.Int);
            cmd.Parameters["@Id"].Value = id;
            cmd.Parameters["@CompanyId"].Value = companyId;
            cnn.Open();
            SqlDataReader rdr = cmd.ExecuteReader();
            while(rdr.Read())
            {
                this.id = id;
                this.companyId = companyId;
                this.name = rdr["Name"].ToString();

                this.Employees.Add(new Employee() { 
                    Id = rdr.GetInt32(3),
                    Name = rdr.GetString(4),
                    LastName=rdr.GetString(5),
                    SecondLastName=rdr.GetString(6)
                });
            }
        }
        catch (Exception ex)
        {
        }
        finally
        {
            if (cnn.State != ConnectionState.Closed)
            {
                cnn.Close();
            }

            cnn.Dispose();
            cmd.Dispose();
        }
    }

    public void Insert()
    {
        SqlConnection cnn = new SqlConnection(ConfigurationManager.ConnectionStrings["cns"].ConnectionString);
        SqlCommand cmd = new SqlCommand("Department_Insert", cnn);

        try
        {
            cmd.CommandType = CommandType.StoredProcedure;

            cmd.Parameters.Add("@CompanyId", SqlDbType.Int);
            cmd.Parameters["@CompanyId"].Value = this.companyId;

            cmd.Parameters.Add("@Description", SqlDbType.Text);
            cmd.Parameters["@Description"].Value = this.name;

            cmd.Parameters.Add("@Id", SqlDbType.Int);
            cmd.Parameters["@Id"].Value = this.Id;
            cmd.Parameters["@Id"].Direction = ParameterDirection.Output;
            cnn.Open();
            cmd.ExecuteNonQuery();
            this.id = Convert.ToInt32(cmd.Parameters["@Id"].Value);
            ActivityLog.Department(this.id, Convert.ToInt32(HttpContext.Current.Session["UserId"]), Convert.ToInt32(HttpContext.Current.Session["CompanyId"]), ActivityLog.Activity.Deparment.Create, this.name);
        }
        catch (Exception ex)
        {           
        }
        finally
        {
            if (cnn.State != ConnectionState.Closed)
            {
                cnn.Close();
            }

            cnn.Dispose();
            cmd.Dispose();
        }
    }    

    public string ToJson()
    {
        return "{\"Id\":" + this.id.ToString() + ",\"Description\":\"" + this.Name + "\",\"CompanyId\":" + this.companyId.ToString() + "}";
    }

    public string GetDepartmentRow()
    {
        string employees = string.Empty;
        bool first = true;
        foreach (Employee employee in this.Employees)
        {
            if (first)
            {
                first = false;
            }
            else
            {
                employees += ", ";
            }

            employees += employee.ProfileViewLink;
        }

        return string.Format(@"<tr><td><strong>{0}</strong></td><td class=""hidden-480"">({1}) {2}</td></tr>", this.ProfileViewLink, this.Employees.Count, employees);
    }

    public string ProfileViewLink
    {
        get
        {
            return string.Format("<a href=\"DepartmentView.aspx?id={0}\" title=\"{2} {1}\">{1}</a>", this.id, this.name, ((Dictionary<string, string>)HttpContext.Current.Session["Dictionary"])["Ver perfil de"]);
        }
    }
}